name: build python package and upload to pypi

on:
  push:
    branches: [ main ]

jobs:
  testing:
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v2
      - name: Set up Python
        uses: actions/setup-python@v2
        with:
          python-version: '3.8'
      - name: install standard python dependencies
        run: |
          python -m pip install --upgrade pip
          pip install flake8 pytest
          if [ -f requirements.txt ]; then pip install -r requirements.txt; fi
          if [ -f requirements-test.txt ]; then pip install -r requirements-test.txt; fi
      - name: Lint with flake8
        run: |
          flake8 . --count --select=E9,F63,F7,F82 --show-source --statistics
          flake8 . --count --exit-zero --max-complexity=10 --max-line-length=127 --statistics
      - name: test with pytest
        run: pytest

  build:
    runs-on: ubuntu-latest
    needs: testing
    steps:
      - uses: actions/checkout@v2
      - name: Set up Python
        uses: actions/setup-python@v2
        with:
          python-version: '3.8'
      - name: install dependencies
        run: |
          python -m pip install --upgrade pip
          python -m pip install setuptools wheel twine build
          pip install -r requirements.txt
      - name: get version
        id: get_version
        run: |
          echo -e "import ${{ github.event.repository.name }}\nprint(${{ github.event.repository.name }}.__version__)" >> get_version.py
          echo ::set-output name=VERSION::"$(python get_version.py)"
      - name: build package
        run: |
          python setup.py sdist bdist_wheel
      - name: release
        uses: marvinpinto/action-automatic-releases@latest
        id: create_release
        with:
          draft: false
          prerelease: false
          automatic_release_tag: v${{ steps.get_version.outputs.VERSION }}
          repo_token: "${{ secrets.GITHUB_TOKEN }}"
          title: v${{ steps.get_version.outputs.VERSION }}
          files: dist/*
      - name: save dist for upload
        uses: actions/upload-artifact@v2
        with:
          name: dist
          path: dist
  upload:
    runs-on: ubuntu-latest
    needs: build
    steps:
      - uses: actions/checkout@v2
      - uses: actions/download-artifact@v2
        with:
          name: dist
          path: dist
      - name: Publish a Python distribution to PyPI
        uses: pypa/gh-action-pypi-publish@release/v1
        with:
          user: __token__
          password: ${{ secrets.PYPI_API_TOKEN }}

